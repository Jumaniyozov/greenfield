name: CI Checks

on:
  push:
    branches:
      - master

jobs:
  test:
    name: Test Application
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go 1.x
        uses: actions/setup-go@v2
        with:
          go-version: ^1.23
      - name: Check out code into the Go module directory
        uses: actions/checkout@v2
      - name: Run Test
        run: make test
      - name: Coverage check
        run: make coverage
      - name: Generate report
        run: make report
      - name: Copy Files
        run: |
          mkdir reports
          cp cover.html reports/.
      - name: Archive
        uses: actions/upload-artifact@v4
        with:
          name: reports
          path: reports

  build:
    name: Build App
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Set up Go 1.x
        uses: actions/setup-go@v2
        with:
          go-version: ^1.23
      - name: Check out code into the Go module directory
        uses: actions/checkout@v2
      - name: Build
        run: make build
      - name: Copy Files
        run: |
          mkdir artifacts
          cp api artifacts/.
      - name: Archive
        uses: actions/upload-artifact@v4
        with:
          name: api
          path: artifacts


  deliver:
    permissions:
      contents: write
    name: Release
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Download binary
        uses: actions/download-artifact@v4
        with:
          name: api
          path: .

      # Create a draft pre-release
      - name: Create Draft Prerelease
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release create "${{ github.ref }}" \
            --title "Release ${{ github.ref }}" \
            --notes "Still in experimentation phase" \
            --draft \
            --prerelease

      # Upload the binary asset to the newly created release
      - name: Upload Release Binary
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release upload  "api" --clobber
          gh release upload "${{ github.ref }}" "./api" --clobber